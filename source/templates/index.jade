doctype html
html(ng-app="Base16Designer" ng-controller="designerCtrl")
  head
    meta(charset='utf-8')
    meta(http-equiv='X-UA-Compatible' content='IE=edge')
    meta(http-equiv='content-type' content='text/html; charset=UTF-8')
    title Base16 Designer
    meta(name='description' content="An app for interactively designing color schemes for Chris Kempson's Base16 Builder (https://github.com/chriskempson/base16-builder)")
    meta(name='viewport' content='width=device-width,initial-scale=1,minimum-scale=1')
    link(rel='icon' type='image/x-icon' href='favicon.ico')
    link(href='main.min.css' rel='stylesheet' type='text/css' media='all')
    //- Material Design Icons (placeholder until better-suited icons are found)
    link(
      href="https://fonts.googleapis.com/css?family=Material+Icons|Source+Sans+Pro:400,700|Source+Code+Pro:400,700"
      rel='stylesheet'
      type='text/css'
      media='all'
    )
    if (release === false)
      //- live reload
      script(src="//localhost:35729/livereload.js" async)
      //- Angular
      script(src="https://ajax.googleapis.com/ajax/libs/angularjs/1.5.5/angular.js")
      script(src='https://ajax.googleapis.com/ajax/libs/angularjs/1.5.5/angular-sanitize.js')
    else
      script(src="https://ajax.googleapis.com/ajax/libs/angularjs/1.5.5/angular.min.js")
      script(src='https://ajax.googleapis.com/ajax/libs/angularjs/1.5.5/angular-sanitize.min.js')
    //- Tinycolor
    script(src='https://cdn.jsdelivr.net/tinycolor/1.3.0/tinycolor-min.js')
    //- Main
    script(src='main.min.js')
  body
    .main-content
        .scheme
          //- Menu for switching the scheme to a Base16 scheme
          ul.scheme-switcher.clearfix(ng-if="state.schemeListIsActive === true")
            li(
              ng-repeat="scheme in BASE16_SCHEMES"
              ng-click="setScheme(scheme.scheme)"
            ) {{scheme.scheme}}
          .container
            .scheme-switch-toggle.tooltipped.tooltipped-s(
              aria-label="Select a Base16 Scheme"
              ng-click="state.schemeListIsActive = state.schemeListIsActive === true ? false : true"
            )
              i.material-icons &#xE3B7;
            .scheme-info
              h1 {{scheme.scheme}}
              p(ng-bind-html="scheme.author | linky")
              .swatches-wrapper.clearfix
                ul.swatches
                  li(
                    ng-repeat="n in [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]"
                    ng-style="{'background-color': fetchSwatchBack(n), 'color': fetchSwatchFore(n)}"
                    ng-click="colorpickerShow()"
                  ) {{toHex(n)}}
                    i.material-icons &#xE3B8;
              .colorpicker-wrapper(ng-if="colorpicker.isActive")
                .colorpicker
                  label.colorpicker-head(for="color-input") {{colorpicker.caller}}
                    i.colorpicker-close.material-icons(ng-click="colorpicker.isActive = false") &#58829;
                  .colorpicker-fieldset
                    .colorpicker-field
                      input#color-input(
                        type="text"
                        maxlength="30"
                        ng-model="colorpicker.color"
                        ng-change="updatePaletteColor()"
                      )
            //- tabs for switching dark/light schemes
            ul.tabs.clearfix
              li(
                aria-label="View dark scheme"
                style="background-color: #\{{scheme.base00}}; color: #\{{scheme.base05}};"
                ng-click="state.view = 'dark'"
              ) Dark
              li(
                aria-label="View light scheme"
                style="background-color: #\{{scheme.base07}}; color: #\{{scheme.base02}};"
                ng-click="state.view = 'light'"
              ) Light
          //- scheme-preview
          .scheme-preview(ng-style="{'background-color': '#' + (state.view === 'dark' ? scheme.base00 : scheme.base07), 'color': '#' + (state.view === 'dark' ? scheme.base05 : scheme.base02)}")
            pre.container
              code
                span(style="color: #\{{scheme.base0E}};") require&nbsp;
                span(style="color: #\{{scheme.base0B}};") "gem"
                = "\n\n"
                span(style="color: #\{{scheme.base08}};") string
                |&nbsp;=&nbsp;
                span(style="color: #\{{scheme.base0B}};") "base16"
                = "\n"
                span(style="color: #\{{scheme.base08}};") symbol
                |&nbsp;=&nbsp;
                span(style="color: #\{{scheme.base0B}};") :base16
                = "\n"
                span(style="color: #\{{scheme.base08}};") fixnum
                |&nbsp;=&nbsp;
                span(style="color: #\{{scheme.base09}};") 0
                = "\n"
                span(style="color: #\{{scheme.base08}};") float
                |&nbsp;&nbsp;=&nbsp;
                span(style="color: #\{{scheme.base09}};") 0.00
                = "\n"
                span(style="color: #\{{scheme.base08}};") array
                |&nbsp;&nbsp;=&nbsp;
                span(style="color: #\{{scheme.base0A}};") Array
                | .
                span(style="color: #\{{scheme.base0D}};") new
                = "\n"
                span(style="color: #\{{scheme.base08}};") array
                |&nbsp;&nbsp;=&nbsp;[
                span(style="color: #\{{scheme.base0B}};") "chris"
                | ,&nbsp;
                span(style="color: #\{{scheme.base09}};") 85
                | ]
                = "\n"
                span(style="color: #\{{scheme.base08}};") hash
                |&nbsp;&nbsp;&nbsp;=&nbsp;{
                span(style="color: #\{{scheme.base0B}};") "test"
                |&nbsp;=&#62;&nbsp;
                span(style="color: #\{{scheme.base0B}};") "test"
                | }
                = "\n"
                span(style="color: #\{{scheme.base08}};") regexp
                |&nbsp;=&nbsp;
                span(style="color: #\{{scheme.base0C}};") /[abc]/
                = "\n\n"
                span(style="color: #\{{scheme.base03}};") # This is a comment
                = "\n"
                span(style="color: #\{{scheme.base0E}};") class&nbsp;
                span(style="color: #\{{scheme.base0A}};") Person
                = "\n\n  "
                span(style="color: #\{{scheme.base0D}};") attr_accessor&nbsp;
                span(style="color: #\{{scheme.base0B}};") :name
                = "\n\n  "
                span(style="color: #\{{scheme.base0E}};") def&nbsp;
                span(style="color: #\{{scheme.base0D}};") initialize
                | (
                span(style="color: #\{{scheme.base08}};") attributes
                =" = {})\n    "
                span(style="color: #\{{scheme.base08}};") @name
                |&nbsp;=&nbsp;
                span(style="color: #\{{scheme.base08}};") attributes
                | [
                span(style="color: #\{{scheme.base0B}};") :name
                ="]\n  "
                span(style="color: #\{{scheme.base0E}};") end
                = "\n\n  "
                span(style="color: #\{{scheme.base0E}};") def&nbsp;
                span(style="color: #\{{scheme.base0E}};") self
                | .
                span(style="color: #\{{scheme.base0D}};") greet
                = "\n    "
                span(ng-style="{'background-color': '#' + (state.view === 'dark' ? scheme.base02 : scheme.base06), 'color': '#' + scheme.base0B}") "hello"
                = "\n  "
                span(style="color: #\{{scheme.base0E}};") end
                = "\n"
                span(style="color: #\{{scheme.base0E}};") end
                = "\n\n"
                span(style="color: #\{{scheme.base08}};") person1
                |&nbsp;=&nbsp;
                span(style="color: #\{{scheme.base0A}};") Person
                | .
                span(style="color: #\{{scheme.base0D}};") new
                | (
                span(style="color: #\{{scheme.base0B}};") :name
                | &nbsp;=&#62;&nbsp;
                span(style="color: #\{{scheme.base0B}};") "Chris"
                ="\)\n"
                span(style="color: #\{{scheme.base0D}};") print&nbsp;
                span(style="color: #\{{scheme.base0A}};") Person
                | ::
                span(style="color: #\{{scheme.base0D}};") greet
                | ,&nbsp;
                span(style="color: #\{{scheme.base0B}};") " "
                | ,&nbsp;
                span(style="color: #\{{scheme.base08}};") person1
                | .
                span(style="color: #\{{scheme.base0D}};") name
                | ,
                span(style="color: #\{{scheme.base0B}};")
                  |&nbsp;"
                  span(style="color: #\{{scheme.base09}};") \n
                  ="\"\n"
                span(style="color: #\{{scheme.base0D}};") puts&nbsp;
                span(style="color: #\{{scheme.base0B}};") "another&nbsp;
                span(style="color: #\{{scheme.base0F}};") \#{
                span(style="color: #\{{scheme.base0A}};") Person
                | ::
                span(style="color: #\{{scheme.base0D}};") greet
                span(style="color: #\{{scheme.base0F}};") }&nbsp;
                span(style="color: #\{{scheme.base0F}};") \#{
                span(style="color: #\{{scheme.base08}};") person1
                | .
                span(style="color: #\{{scheme.base0D}};") name
                span(style="color: #\{{scheme.base0F}};") }
                span(style="color: #\{{scheme.base0B}};") "
                span="\n\n\n"
                code#yaml
                  span(style="color: #\{{scheme.base03}};") # {{scheme.scheme}} scheme for the Base16 Builder (
                    a(
                      href="https://github.com/chriskempson/base16-builder"
                      rel="nofollow"
                      target="_blank"
                      style="color: #\{{scheme.base03}};"
                    ) https://github.com/chriskempson/base16-builder
                    |);&#10;
                  span(
                    ng-repeat-start="(prop, value) in scheme"
                    style="color: #\{{scheme.base08}};"
                  ) {{prop}}:&nbsp;
                  span(style="color: #\{{scheme.base0B}};") "{{value}}"
                  span(
                    ng-repeat-end
                    style="color: #\{{scheme.base03}};"
                  ) {{COMMENT_MAP[prop]}}&#10;

