doctype html
html(ng-app="Base16Designer", ng-controller="designerCtrl")
  head
    meta(charset='utf-8')
    meta(http-equiv='X-UA-Compatible', content='IE=edge')
    meta(http-equiv='content-type', content='text/html; charset=UTF-8')
    title Base16 Designer
    meta(name='description', content="An app for interactively designing color schemes for Chris Kempson's Base16 Builder (https://github.com/chriskempson/base16-builder)")
    meta(name='viewport', content='width=device-width, initial-scale=1')
    link(rel='icon', type='image/x-icon', href='favicon.ico')
    link(href='main.min.css', rel='stylesheet', type='text/css', media='all')
    //- Material Design Icons (placeholder until better-suited icons are found)
    link(href="https://fonts.googleapis.com/css?family=Material+Icons|Source+Sans+Pro:400,700", rel='stylesheet', type='text/css', media='all')
    //! Hack font Â© Christopher Simpkins <http://sourcefoundry.org/hack/>
    link(href='https://cdn.jsdelivr.net/font-hack/2.015/css/hack.min.css', rel='stylesheet', type='text/css', media='all')
    //- Angular
    script(src='https://ajax.googleapis.com/ajax/libs/angularjs/1.4.9/angular.min.js')
    script(src='https://ajax.googleapis.com/ajax/libs/angularjs/1.4.9/angular-sanitize.min.js')
    //- Angular Clipboard
    script(src="https://cdnjs.cloudflare.com/ajax/libs/clipboard.js/1.5.5/clipboard.min.js")
    //- Tinycolor
    script(src='https://cdn.jsdelivr.net/tinycolor/1.3.0/tinycolor-min.js')
    //- Yaml
    //- script(src='https://cdnjs.cloudflare.com/ajax/libs/js-yaml/3.5.2/js-yaml.min.js')
    //- Main
    script(src='main.min.js')
    //- live reload
    if dev === true
      script(src='http://localhost:35729/livereload.js')
  body
    .main-content
        .scheme
          //- Menu for switching the scheme to a Base16 scheme
          ul.scheme-switcher.clearfix(ng-if="state.schemeListIsActive === true")
            li(ng-repeat="scheme in BASE16_SCHEMES", ng-click="designer.setScheme(scheme.scheme)") {{scheme.scheme}}
          .scheme-info
            h1 {{scheme.scheme}}
            p(ng-bind-html="scheme.author | linky")
            .swatches-wrapper.clearfix
              .scheme-switch-toggle.tooltipped.tooltipped-ne(aria-label="Select a Base16 Scheme", ng-click="state.schemeListIsActive = state.schemeListIsActive === true ? false : true;designer.updateStorage();")
                i.material-icons &#xE3B7;
              ul.swatches
                each hex in hexcodes
                  li(style="background-color: #\{{workspace.scheme.base#{hex}}}; color: #\{{(COLOR_MAP.base#{hex} === undefined ? workspace.scheme.base07 : workspace.scheme[COLOR_MAP.base#{hex}])}};", ng-click="colorpicker.isActive = true;designer.updateStorage();colorpicker.populatePicker(workspace.scheme.base#{hex}, 'base#{hex}');")= hex
                    i.material-icons &#xE3B8;
              .colorpicker-wrapper(ng-if="colorpicker.isActive === true")
                .colorpicker
                  .colorpicker-head {{colorpicker.caller}}
                    i.colorpicker-close.material-icons(ng-click="colorpicker.isActive = false;") &#58829;
                  .colorpicker-fieldset
                    .colorpicker-field
                      input#colorpicker-hex(type="text", minlength="3", maxlength="40", ng-model="colorpicker.colors.hex", ng-change="colorpicker.updateColor('hex')", ng-trim="true")
                      label(for="colorpicker-hex") Hex
                  .colorpicker-fieldset
                    .colorpicker-field
                      input#colorpicker-rgb-r(type="number", step="1", min="0", max="255", ng-model="colorpicker.colors.rgb.r", ng-change="colorpicker.updateColor('rgb')", ng-trim="true")
                      label(for="colorpicker-rgb-r") R
                    .colorpicker-field
                      input#colorpicker-rgb-g(type="number", step="1", min="0", max="255", ng-model="colorpicker.colors.rgb.g", ng-change="colorpicker.updateColor('rgb')", ng-trim="true")
                      label(for="colorpicker-rgb-g") G
                    .colorpicker-field
                      input#colorpicker-rgb-b(type="number", step="1", min="0", max="255", ng-model="colorpicker.colors.rgb.b", ng-change="colorpicker.updateColor('rgb')", ng-trim="true")
                      label(for="colorpicker-rgb-b") B
                  .colorpicker-fieldset
                    .colorpicker-field
                      input#colorpicker-hsl-h(type="number", step="1", min="0", max="360", ng-model="colorpicker.colors.hsl.h", ng-change="colorpicker.updateColor('hsl')", ng-trim="true")
                      label(for="colorpicker-hsl-h") H
                    .colorpicker-field
                      input#colorpicker-hsl-s(type="number", step="1", min="0", max="100", ng-model="colorpicker.colors.hsl.s", ng-change="colorpicker.updateColor('hsl')", ng-trim="true")
                      label(for="colorpicker-hsl-s") S
                    .colorpicker-field
                      input#colorpicker-hsl-l(type="number", step="1", min="0", max="100", ng-model="colorpicker.colors.hsl.l", ng-change="colorpicker.updateColor('hsl')", ng-trim="true")
                      label(for="colorpicker-hsl-l") L
                  .colorpicker-fieldset
                    .colorpicker-field
                      input#colorpicker-hsv-h(type="number", step="1", min="0", max="360", ng-model="colorpicker.colors.hsv.h", ng-change="colorpicker.updateColor('hsv')", ng-trim="true")
                      label(for="colorpicker-hsv-h") H
                    .colorpicker-field
                      input#colorpicker-hsv-s(type="number", step="1", min="0", max="100", ng-model="colorpicker.colors.hsv.s", ng-change="colorpicker.updateColor('hsv')", ng-trim="true")
                      label(for="colorpicker-hsv-s") S
                    .colorpicker-field
                      input#colorpicker-hsv-v(type="number", step="1", min="0", max="100", ng-model="colorpicker.colors.hsv.v", ng-change="colorpicker.updateColor('hsv')", ng-trim="true")
                      label(for="colorpicker-hsv-v") V
            //- tabs for switching dark/light schemes + toolbar
            ul.tabs.clearfix
              li(aria-label="View dark scheme", style="background-color: #\{{workspace.scheme.base00}}; color: #\{{workspace.scheme.base05}};", ng-click="state.view = 'dark';designer.updateStorage();") Dark
              li(aria-label="View light scheme", style="background-color: #\{{workspace.scheme.base07}}; color: #\{{workspace.scheme.base02}};", ng-click="state.view = 'light';designer.updateStorage();") Light
              //- li.command.tooltipped.tooltipped-n(aria-label="Delete Scheme and state", ng-click="designer.clearStorage();")
              //-   i.material-icons &#xE872;
              li.command.tooltipped.tooltipped-n(aria-label="Code Focus")
                a(href="#code")
                  i.material-icons &#xE8F4;
              li.command.tooltipped.tooltipped-n(aria-label="Copy Scheme as YAML", ngclipboard, data-clipboard-target="#yaml", ngclipboard-success="copySuccess(e);")
                i.material-icons &#xE86F;
              li.command.tooltipped.tooltipped-n(aria-label="Set Font Size")
                label(for="fontSize")
                  i.material-icons &#xE245;
                  input#fontSize(type="number", min="1", max="60", step="1", ng-model="state.fontSize", ng-change="designer.updateStorage()")
              li.command.tooltipped.tooltipped-n(aria-label="Toggle Italic Font", ng-click="designer.setFontStyle()", ng-class="{active: state.fontStyle === 'italic' ? true : false}")
                i.material-icons &#xE23F;
              li.command.tooltipped.tooltipped-n(aria-label="Toggle Bold Font", ng-click="designer.setFontWeight()", ng-class="{active: state.fontWeight === 'bold' ? true : false}")
                i.material-icons &#xE238;
          //- scheme-preview
          pre.scheme-preview#code(ng-style="{'background-color': '#' + (state.view === 'dark' ? workspace.scheme.base00 : workspace.scheme.base07), 'color': '#' + (state.view === 'dark' ? workspace.scheme.base05 : workspace.scheme.base02), 'font-weight': state.fontWeight, 'font-style': state.fontStyle, 'font-size': state.fontSize+'px'}")
            code
              span(style="color: #\{{workspace.scheme.base0E}};") require&nbsp;
              span(style="color: #\{{workspace.scheme.base0B}};") "gem"
              = "\n\n"
              span(style="color: #\{{workspace.scheme.base08}};") string
              |&nbsp;=&nbsp;
              span(style="color: #\{{workspace.scheme.base0B}};") "base16"
              = "\n"
              span(style="color: #\{{workspace.scheme.base08}};") symbol
              |&nbsp;=&nbsp;
              span(style="color: #\{{workspace.scheme.base0B}};") :base16
              = "\n"
              span(style="color: #\{{workspace.scheme.base08}};") fixnum
              |&nbsp;=&nbsp;
              span(style="color: #\{{workspace.scheme.base09}};") 0
              = "\n"
              span(style="color: #\{{workspace.scheme.base08}};") float
              |&nbsp;&nbsp;=&nbsp;
              span(style="color: #\{{workspace.scheme.base09}};") 0.00
              = "\n"
              span(style="color: #\{{workspace.scheme.base08}};") array
              |&nbsp;&nbsp;=&nbsp;
              span(style="color: #\{{workspace.scheme.base0A}};") Array
              | .
              span(style="color: #\{{workspace.scheme.base0D}};") new
              = "\n"
              span(style="color: #\{{workspace.scheme.base08}};") array
              |&nbsp;&nbsp;=&nbsp;[
              span(style="color: #\{{workspace.scheme.base0B}};") "chris"
              | ,&nbsp;
              span(style="color: #\{{workspace.scheme.base09}};") 85
              | ]
              = "\n"
              span(style="color: #\{{workspace.scheme.base08}};") hash
              |&nbsp;&nbsp;&nbsp;=&nbsp;{
              span(style="color: #\{{workspace.scheme.base0B}};") "test"
              |&nbsp;=&#62;&nbsp;
              span(style="color: #\{{workspace.scheme.base0B}};") "test"
              | }
              = "\n"
              span(style="color: #\{{workspace.scheme.base08}};") regexp
              |&nbsp;=&nbsp;
              span(style="color: #\{{workspace.scheme.base0C}};") /[abc]/
              = "\n\n"
              span(style="color: #\{{workspace.scheme.base03}};") # This is a comment
              = "\n"
              span(style="color: #\{{workspace.scheme.base0E}};") class&nbsp;
              span(style="color: #\{{workspace.scheme.base0A}};") Person
              = "\n\n  "
              span(style="color: #\{{workspace.scheme.base0D}};") attr_accessor&nbsp;
              span(style="color: #\{{workspace.scheme.base0B}};") :name
              = "\n\n  "
              span(style="color: #\{{workspace.scheme.base0E}};") def&nbsp;
              span(style="color: #\{{workspace.scheme.base0D}};") initialize
              | (
              span(style="color: #\{{workspace.scheme.base08}};") attributes
              =" = {})\n    "
              span(style="color: #\{{workspace.scheme.base08}};") @name
              |&nbsp;=&nbsp;
              span(style="color: #\{{workspace.scheme.base08}};") attributes
              | [
              span(style="color: #\{{workspace.scheme.base0B}};") :name
              ="]\n  "
              span(style="color: #\{{workspace.scheme.base0E}};") end
              = "\n\n  "
              span(style="color: #\{{workspace.scheme.base0E}};") def&nbsp;
              span(style="color: #\{{workspace.scheme.base0E}};") self
              | .
              span(style="color: #\{{workspace.scheme.base0D}};") greet
              = "\n    "
              span(ng-style="{'background-color': '#' + (state.view === 'dark' ? workspace.scheme.base02 : workspace.scheme.base06), 'color': '#' + workspace.scheme.base0B}") "hello"
              = "\n  "
              span(style="color: #\{{workspace.scheme.base0E}};") end
              = "\n"
              span(style="color: #\{{workspace.scheme.base0E}};") end
              = "\n\n"
              span(style="color: #\{{workspace.scheme.base08}};") person1
              |&nbsp;=&nbsp;
              span(style="color: #\{{workspace.scheme.base0A}};") Person
              | .
              span(style="color: #\{{workspace.scheme.base0D}};") new
              | (
              span(style="color: #\{{workspace.scheme.base0B}};") :name
              | &nbsp;=&#62;&nbsp;
              span(style="color: #\{workspace.scheme.base0B}};") "Chris"
              ="\)\n"
              span(style="color: #\{{workspace.scheme.base0D}};") print&nbsp;
              span(style="color: #\{{workspace.scheme.base0A}};") Person
              | ::
              span(style="color: #\{{workspace.scheme.base0D}};") greet
              | ,&nbsp;
              span(style="color: #\{{workspace.scheme.base0B}};") " "
              | ,&nbsp;
              span(style="color: #\{{workspace.scheme.base08}};") person1
              | .
              span(style="color: #\{{workspace.scheme.base0D}};") name
              | ,
              span(style="color: #\{{workspace.scheme.base0B}};")
                |&nbsp;"
                span(style="color: #\{{workspace.scheme.base09}};") \n
                ="\"\n"
              span(style="color: #\{{workspace.scheme.base0D}};") puts&nbsp;
              span(style="color: #\{{workspace.scheme.base0B}};") "another&nbsp;
              span(style="color: #\{{workspace.scheme.base0F}};") \#{
              span(style="color: #\{{workspace.scheme.base0A}};") Person
              | ::
              span(style="color: #\{{workspace.scheme.base0D}};") greet
              span(style="color: #\{{workspace.scheme.base0F}};") }&nbsp;
              span(style="color: #\{{workspace.scheme.base0F}};") \#{
              span(style="color: #\{{workspace.scheme.base08}};") person1
              | .
              span(style="color: #\{{workspace.scheme.base0D}};") name
              span(style="color: #\{{workspace.scheme.base0F}};") }
              span(style="color: #\{{workspace.scheme.base0B}};") "
              span="\n\n\n"
              code#yaml()
                span(style="color: #\{{workspace.scheme.base03}};") # {{workspace.scheme.scheme}} scheme for the Base16 Builder (
                  a(href="https://github.com/chriskempson/base16-builder", target="_blank", style="color: #\{{workspace.scheme.base03}};") https://github.com/chriskempson/base16-builder
                  |);&#10;
                span(ng-repeat-start="(prop, value) in scheme", style="color: #\{{workspace.scheme.base08}};") {{prop}}:&nbsp;
                span(style="color: #\{{workspace.scheme.base0B}};") "{{value}}"
                span(ng-repeat-end, style="color: #\{{workspace.scheme.base03}};") {{COMMENT_MAP[prop]}}&#10;

